# canvas item.
canvas.identifier=${RESET}${BOLD}Canvas Item
canvas.mapIdString=${MAGIC}===========
canvas.renameTitle==${AQUA}Rename Canvas${RESET}=
canvas.renameLn3=${DARK_GRAY}(Modify Line 2 To
canvas.renameLn4=${DARK_GRAY}Rename Canvas!)

# palette item.
palette.fillBucket=${RESET}Fill Bucket
palette.drinkPaintBucket=${MAGIC}====${RESET}Is it tasty?${MAGIC}=====
palette.identifier=${RESET}${BOLD}Palette Item
palette.cyan=${RESET}${AQUA}${BOLD}Cyan: ${RESET}
palette.magenta=${RESET}${LIGHT_PURPLE}${BOLD}Magenta: ${RESET}
palette.yellow=${RESET}${YELLOW}${BOLD}Yellow: ${RESET}

# memento.
memento.fill=Fill starting from [$x, $y] with color ($r, $g, $b).
memento.tap=Tap on pixel [$x, $y] with color ($r, $g, $b).
memento.line=Draw a line from [$x1, $y1] to [$x2, $y2] with color ($r, $g, $b).
memento.razorTap=Razored pixel [$x, $y].
memento.razorLine=Razored a line from [$x1, $y1] to [$x2, $y2].

# undo command.
undo.description=Undo a unexpected action when you regret.
undo.noModifiedCanvas=${RED}You should specify a canvas or paint on some canvas before undoing.
undo.canvasNotExists=Cannot undo on ${AQUA}$canvasName${RED}! Specified canvas ${AQUA}$canvasName${RED} doesn't exist!
undo.nothingToUndo=${RED}You have nothing to undo on canvas ${AQUA}$canvasName${RED}!
undo.noUndoPermission=${RED}You don't have permission to undo on canvas ${AQUA}$canvasName${RED}!
undo.undoFinish=You have undone ${UNDERLINE}$memoto${RESET} on canvas ${AQUA}$canvasName${RESET}!

# redo command.
redo.description=Do a recently undone action again.
redo.noModifiedCanvas=${RED}You should specify a canvas or paint on some canvas before redoing.
redo.canvasNotExists=Cannot redo on ${AQUA}$canvasName${RED}! Specified canvas ${AQUA}$canvasName${RED} doesn't exist!
redo.nothingToRedo=${RED}You have nothing to redo on canvas ${AQUA}$canvasName${RED}!
redo.noRedoPermission=${RED}You don't have permission to redo on canvas ${AQUA}$canvasName${RED}!
redo.redoFinish=You have redone ${UNDERLINE}$memoto${RESET} on canvas ${AQUA}$canvasName${RESET}!

# command composite.
composite.listing=Listing ${BOLD}subcommands${RESET} for ${YELLOW}$prefix${RESET}:
composite.nextPage=Please issue ${YELLOW}$prefix $nextPage${RESET} for more ${BOLD}subcommands${RESET}.
composite.lastPage=This is the last page of ${BOLD}subcommands${RESET} for ${YELLOW}$prefix${RESET}.

# create command.
create.description=Create a new canvas based on arguments.
create.onlyPlayer=${RED}Only player can use create canvas command.
create.noCreatePermission=${RED}You don't have permission to create canvas of this type.
create.notHoldingMap=You're not holding a map in your hand. Confirm if you would like to create a new one, or just ignore it if you won't.
create.mapAlreadyBound=The map you're holding has already been bound to a map. You could create a new one by confirming, or just ignore it if you won't.
create.tooManyMap=${RED}It seems you have created too many map that no new map could be created.
create.canvasAlreadyExisted=${RED}The canvas ${AQUA}$canvasName${RED} has already existed.
create.bound=You have successfully bound ${AQUA}$canvasName${RESET}!
create.wrap.description=a wrapping container for canvases.

# create normal command.
create.normal.description=square canvas fully covering the map.
create.normal.invalidFormat=${RED}You input is not in valid format!
create.normal.outOfRange=${RED}The canvas size you input is either too big or too small.

# create clone command.
create.clone.description=an independent copy of a canvas.
create.clone.clonedUnspecified=You should specify a the name of map to clone!
create.clone.canvasNotExists=${RED}Cannot clone ${AQUA}$canvasName${RED}! Specified canvas ${AQUA}$canvasName${RED} doesn't exist!

# create script command.
create.script.description=a incredible canvas run on a script.
create.script.noScript=${RED}You would need a script file to empower this canvas.
create.script.languageUnsupported=${RED}I'm sorry but script engine for ${LIGHT_PURPLE}$language${RED} has not yet been installed.

# destroy command.
destroy.description=Throw useless canvas into the rubbish bin.
destroy.canvasNotExists=${RED}Cannot destroy ${AQUA}$canvasName${RED}! Specified canvas ${AQUA}$canvasName${RED} doesn't exist!
destroy.noDestroyPermission=${RED}You are neither the owner of the painting ${AQUA}$canvasName${RED} nor the manager!
destroy.unbound=The canvas ${AQUA}$canvasName${RESET} has been unbound.
destroy.holding=You're holding the canvas ${AQUA}$canvasName${RESET} in your hand. Please confirm if you want to destroy it, or just use ${YELLOW}$prefix <name>${RESET} to specify a map.

# give command.
give.description=Give you the canvas you want.
give.onlyPlayer=${RED}Only player can use give command.
give.canvasNotExists=${RED}Cannot give ${AQUA}$canvasName${RED} to you! Specified canvas ${AQUA}$canvasName${RED} doesn't exist.
give.noGivePermission=${RED}You are neither the owner of the painting ${AQUA}$canvasName${RED} nor the manager.
give.hereYouAre=Here you are! The canvas ${AQUA}|$canvasName${RESET}!

# chmod command.
chmod.description=Manage the painters of a canvas.
chmod.onlyPlayer=${RED}Only player can use change mode command without specifying canvas name.
chmod.canvasNotExists=${RED}Cannot add or remove painters of ${AQUA}$canvasName${RED}! Specified canvas ${AQUA}$canvasName${RED} doesn't exist!
chmod.painterModified=You have successfully manages painters of ${AQUA}$canvasName${RESET}!
chmod.painterAdded=You are added as the painter of ${AQUA}$canvasName${RESET}!
chmod.painterRemoved=You are no longer the painter of ${AQUA}$canvasName${RESET}!
chmod.interactorAdded=You can now interact with ${AQUA}$canvasName${RESET}!
chmod.interactorRemoved=You can no longer interact with ${AQUA}$canvasName${RESET}!
chmod.notHolding=${RED}You should either hold a canvas in hand or specify the canvas name.
chmod.noChmodPermission=${RED}You don't have permission to manage painters of ${AQUA}$canvasName${RED}!

# chown command.
chown.description=Transfer the ownership of a canvas.
chown.onlyPlayer=${RED}Only player can use transfer ownership command without specifying canvas name!
chown.canvasNotExists=${RED}Cannot transfer ownership of ${AQUA}$canvasName${RED}! Specified canvas ${AQUA}$canvasName${RED} doesn't exist!
chown.ownershipChanged=You have successfully transfer the ownership of ${AQUA}$canvasName${RESET} to ${BLUE}$newOwner${RESET}!
chown.ownershipGained=You have just gained the ownership of ${AQUA}$canvasName${RESET}!
chown.notHolding=${RED}You should either hold a canvas in hand or specify the canvas name!
chown.noChownPermission=${RED}You don't have permission to transfer ownership of ${AQUA}$canvasName${RED}!

# rename command.
rename.description=Rename an existing canvas.
rename.onlyPlayer=Only player can use rename command without specifying old canvas name!
rename.canvasNotExists=${RED}Cannot rename canvas ${AQUA}$canvasName${RED}! Specified canvas ${AQUA}$canvasName${RED} doesn't exist!
rename.canvasAlreadyExist=${RED}Cannot rename canvas to ${AQUA}$canvasName${RED}! Canvas of name ${AQUA}$canvasName${RED} already exists!
rename.notHolding=${RED}You should either hold a canvas in hand or specify the canvas name!
rename.noRenamePermission=${RED}You don't have permission to rename ${AQUA}$canvasName${RED}!
rename.successfullyRename=${WHITE}You have successfully rename ${AQUA}$oldname${RESET} to ${AQUA}$newname${RESET}!

# control command.
control.description=control canvases through a line of command.
control.canvasNotExists=${RED}Cannot control ${AQUA}$canvasName${RED}! Specified canvas ${AQUA}$canvasName${RED} doesn't exist!
control.invalidFormat=${RED}A input argument is not in right format! Please check your arguments!
control.invalidArguments=${RED}Too more or too less arguments are specified! Please check your arguments!
control.noControlPermission=${RED}You don't have control permission on canvas ${AQUA}$canvasName${RED}!
control.mismatchedType=${RED}The canvas ${AQUA}$canvasName${RED} is of wrong type! A canvas of ${GREEN}$canvasType${RED} is expected!
control.tap.description=tap on a pixel with a color.
control.wrap.description=change the wrapped canvas of a wrapper.
control.wrap.cannotWrap=${RED}Cannot wrap canvas ${AQUA}$canvasName${RED}! The wrapper will wrap itself!

# control debug command.
control.debug.description=debug a script canvas.
control.debug.notScript=The specified canvas ${AQUA}$canvasNam${RED} is not a script canvas!

# info command.
info.description=get detailed information of a canvas.
info.notHolding=${RED}You should either hold a canvas in hand or specify the canvas name!
info.name=${BOLD}Name: ${RESET}${AQUA}$name${RESET}($binding)
info.owner=${BOLD}Owner: ${RESET}${GREEN}$owner
info.painter=${BOLD}Painter: ${RESET}$painterList
info.interactor=${BOLD}Interactor: ${RESET}$interactorList
info.painterListItem=${GREEN}$painter${RESET}
info.privilege=${BOLD}Privilege (${GREEN}$who${WHITE}): ${RESET}$privilegeList

# list command.
list.description=Listing all canvases you possess.
list.noPossess=${RED}You don't possess any canvas.
list.entry=${AQUA}$name${RESET}
list.possess=You possess these canvas(es): $list.

# pigment command.
pigment.description=Give the player a pigment of specified color.
pigment.onlyPlayer=${RED}Only player can use pigment command.
pigment.noPigmentPermission=${RED}You don't have permission to issue pigment command.
pigment.invalidFormat=${RED}/paint buy color ${AQUA}OR ${RED}/paint buy r g b

# purge command.
purge.description=Purge any useless canvases.
purge.noPurgePermission=${RED}You don't have permission to purge canvases.
purge.result=Finished clean up! You have succesfully purged $count files.

# confirm command.
confirm.description=Confirm before using a hazardous command.
confirm.nothingToConfirm=${RED}You have nothing to confirm! Only use when you're executing a hazardous command.
confirm.pleaseConfirm=You are executing a hazardous command! Please issue ${YELLOW}/paint confirm${RESET} if you want to continue.